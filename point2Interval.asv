function [intervalTable] = point2Interval(class, depth, age)
%% point2Interval   Convert a point dataset into an interval dataset
%
% class:                    Integer for the different classes
% depth:                    Depth for each class point
%
% Mustafa Al Ibrahim @ 2018
% Mustafa.Geoscientist@outlook.com

%% Preprocessing

% Defaults
if ~exist('age', 'var')  ; age = [0 1]; end

% Assertions
assert(exist('class', 'var') && isvector(class), 'class must be a vector');
assert(numel(age) == 1 || numel(age) == 2, 'age must be one or two elements in length');
assert(isnumeric(age), 'age must be numeric');

% Defaults 2
if ~exist('depth', 'var'); depth=1:numel(class); end
if numel(age) == 1; age = [0 age]; end

% Assertions 2
assert(exist('depth', 'var') && size(class)== size(depth), 'depth must be a vector with elements equal to class');


%% Main

% Make sure the data is column formatted
class = class(:);
depth = depth(:);

% Get the start and end of each interval
d = [diff(class)~=0; 1];
endings = find(d);
starts = [1; endings(1:end-1)+1];

% Construct
dzStart = [0; diff(depth)]/2;
dzEnd = [diff(depth); 0]/2;
startDepth = depth(starts)-dzStart(starts);
endDepth = (depth(endings)+dz(endings));
intervalsCompacted = [startDepth,  endDepth, class(starts)];

thickness = intervalsCompacted(:,2) - intervalsCompacted(:,1);
thicknessPercentage = thickness/sum(thickness);
dt = thicknessPercentage*diff(age);
cumsumdt = cumsum(dt);
age = cumsumdt + age(1);



finalAge = num2cell(age(1) + [0; cumsumdt(1:end-1)]);
name =  cellfun(@(x) ['Shublik_' num2str(x)], num2cell((numel(finalAge):-1:1)'), 'UniformOutput', false);
top = num2cell(topInterval(starts));
thicknessFinal = num2cell(thickness);
layerType = repmat({'Deposition'}, numel(finalAge),1);
erosion = repmat({''}, numel(finalAge),1);
lithology = cellfun(@(x) ['Shublik_' num2str(classesLevel) '_' num2str(x)], num2cell(classes(starts)), 'UniformOutput', false);
pse = repmat({'Source Rock'}, numel(finalAge),1);
kinetics = repmat({'Burnham(1989)_TII'}, numel(finalAge),1);
toc = num2cell(tocMeans(classes(starts)))
hi = repmat({'525'},numel(finalAge),1)

end